package kikisrestaurantmanager.ContentPanels;

import MODEL.DB_Statistics;
import addons.ChartDrawingSupplier;
import addons.ChartMouseListenerForPieSections;
import addons.CustomColors;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import kikisrestaurantmanager.ConfirmationFrame;
import kikisrestaurantmanager.MainMenu;
import kikisrestaurantmanager.PeriodChooserDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Day;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ilyas El Bani
 */
public class StatsPanel extends javax.swing.JPanel {

    private DB_Statistics dbStat = new DB_Statistics();
    MainMenu mainMenu;
    SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd");

    /**
     * Creates new form StatsPanel
     */
    public StatsPanel() {
        initComponents();
        //    VentesPanelMouseClicked(null);

    }

    public StatsPanel(MainMenu mn) {
        initComponents();
        mainMenu = mn;
        ChartChoiceSelected(VentesPanel);
//        showVentesCharte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelChart = new javax.swing.JPanel();
        Filtres = new javax.swing.JPanel();
        FiltreVentes = new javax.swing.JPanel();
        venteFiltreTout = new javax.swing.JPanel();
        VentesLabel5 = new javax.swing.JLabel();
        venteFiltreAujourdhui = new javax.swing.JPanel();
        VentesLabel1 = new javax.swing.JLabel();
        venteFiltreSemaine = new javax.swing.JPanel();
        VentesLabel2 = new javax.swing.JLabel();
        venteFiltreMois = new javax.swing.JPanel();
        VentesLabel3 = new javax.swing.JLabel();
        venteFiltrePeriode = new javax.swing.JPanel();
        VentesLabel4 = new javax.swing.JLabel();
        ChartChoice = new javax.swing.JPanel();
        VentesPanel = new javax.swing.JPanel();
        VentesLabel = new javax.swing.JLabel();
        RevenusPanel = new javax.swing.JPanel();
        RevenusLabel = new javax.swing.JLabel();
        HeuresPanel = new javax.swing.JPanel();
        HeuresLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelChart.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
        );

        Filtres.setLayout(new java.awt.CardLayout());

        FiltreVentes.setBackground(new java.awt.Color(255, 255, 255));
        FiltreVentes.setLayout(new java.awt.GridLayout(1, 0, 15, 0));

        venteFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreTout.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreTout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreToutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreToutMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreToutMousePressed(evt);
            }
        });
        venteFiltreTout.setLayout(new java.awt.BorderLayout());

        VentesLabel5.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel5.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel5.setText("Tout");
        venteFiltreTout.add(VentesLabel5, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreTout);

        venteFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreAujourdhui.setPreferredSize(new java.awt.Dimension(100, 30));
        venteFiltreAujourdhui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMousePressed(evt);
            }
        });
        venteFiltreAujourdhui.setLayout(new java.awt.BorderLayout());

        VentesLabel1.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel1.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel1.setText("Aujourd'hui");
        venteFiltreAujourdhui.add(VentesLabel1, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreAujourdhui);

        venteFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreSemaine.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreSemaine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMousePressed(evt);
            }
        });
        venteFiltreSemaine.setLayout(new java.awt.BorderLayout());

        VentesLabel2.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel2.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel2.setText("Derniere Semaine");
        venteFiltreSemaine.add(VentesLabel2, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreSemaine);

        venteFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreMois.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreMois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMousePressed(evt);
            }
        });
        venteFiltreMois.setLayout(new java.awt.BorderLayout());

        VentesLabel3.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel3.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel3.setText("Dernier Mois");
        venteFiltreMois.add(VentesLabel3, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreMois);

        venteFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltrePeriode.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltrePeriode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMousePressed(evt);
            }
        });
        venteFiltrePeriode.setLayout(new java.awt.BorderLayout());

        VentesLabel4.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel4.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel4.setText("Periode");
        venteFiltrePeriode.add(VentesLabel4, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltrePeriode);

        Filtres.add(FiltreVentes, "card2");

        ChartChoice.setBackground(new java.awt.Color(255, 255, 255));
        ChartChoice.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        VentesPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        VentesPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        VentesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VentesPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VentesPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VentesPanelMouseExited(evt);
            }
        });
        VentesPanel.setLayout(new java.awt.BorderLayout());

        VentesLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel.setText("% des Ventes");
        VentesPanel.add(VentesLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(VentesPanel);

        RevenusPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        RevenusPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseExited(evt);
            }
        });
        RevenusPanel.setLayout(new java.awt.BorderLayout());

        RevenusLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        RevenusLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        RevenusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RevenusLabel.setText("Revenus");
        RevenusPanel.add(RevenusLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(RevenusPanel);

        HeuresPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeuresPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        HeuresPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseExited(evt);
            }
        });
        HeuresPanel.setLayout(new java.awt.BorderLayout());

        HeuresLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        HeuresLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        HeuresLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeuresLabel.setText("Heures Actives");
        HeuresPanel.add(HeuresLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(HeuresPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Filtres, javax.swing.GroupLayout.DEFAULT_SIZE, 983, Short.MAX_VALUE)
                    .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChartChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(78, 78, 78))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ChartChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Filtres, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    private void ChartChoiceDefaultColorAll() {
        RevenusPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        VentesPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeuresPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
    }

    private void FilterMouseEntered(JPanel p) {
        if (p.getBackground() != CustomColors.orderFilterPanelSelected) {
            p.setBackground(CustomColors.orderFilterPanelHoveredOn);
        }
    }

    private void FilterMouseExited(JPanel p) {
        if (p.getBackground() != CustomColors.orderFilterPanelSelected) {
            p.setBackground(CustomColors.panelDefaultBackgroundColor);
        }
    }

    private void ChartChoiceSelected(JPanel p) {
        ChartChoiceDefaultColorAll();
        p.setBackground(CustomColors.orderFilterPanelSelected);
    }

    private void FilterChoiceDefaultColorAll() {
        venteFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
    }

    private void FilterSelected(JPanel p) {
        FilterChoiceDefaultColorAll();
        p.setBackground(CustomColors.orderFilterPanelSelected);
    }

    private void VentesPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseClicked

        ChartChoiceSelected(VentesPanel);
        // showVentesCharte();
    }//GEN-LAST:event_VentesPanelMouseClicked

    private void VentesPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseEntered
        FilterMouseEntered(VentesPanel);
    }//GEN-LAST:event_VentesPanelMouseEntered

    private void VentesPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseExited
        FilterMouseExited(RevenusPanel);
    }//GEN-LAST:event_VentesPanelMouseExited

    private void RevenusPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseClicked

        ChartChoiceSelected(RevenusPanel);
        shosRevenusCharteParJour();
    }//GEN-LAST:event_RevenusPanelMouseClicked

    private void RevenusPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseEntered
        FilterMouseEntered(RevenusPanel);
    }//GEN-LAST:event_RevenusPanelMouseEntered

    private void RevenusPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseExited

        FilterMouseExited(RevenusPanel);
    }//GEN-LAST:event_RevenusPanelMouseExited

    private void HeuresPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseClicked
        ChartChoiceSelected(HeuresPanel);
    }//GEN-LAST:event_HeuresPanelMouseClicked

    private void HeuresPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseEntered
        FilterMouseEntered(HeuresPanel);
    }//GEN-LAST:event_HeuresPanelMouseEntered

    private void HeuresPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseExited
        FilterMouseExited(HeuresPanel);
    }//GEN-LAST:event_HeuresPanelMouseExited

    private void venteFiltreAujourdhuiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMouseEntered
        FilterMouseEntered(venteFiltreAujourdhui);
    }//GEN-LAST:event_venteFiltreAujourdhuiMouseEntered

    private void venteFiltreAujourdhuiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMouseExited
        FilterMouseExited(venteFiltreAujourdhui);
    }//GEN-LAST:event_venteFiltreAujourdhuiMouseExited

    private void venteFiltreToutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.YEAR, -100);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMousePressed

    private void venteFiltreToutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMouseEntered
        FilterMouseEntered(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMouseEntered

    private void venteFiltreToutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMouseExited
        FilterMouseExited(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMouseExited

    private void venteFiltreAujourdhuiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -1);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreAujourdhui);

    }//GEN-LAST:event_venteFiltreAujourdhuiMousePressed

    private void venteFiltreSemaineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMouseEntered
        FilterMouseEntered(venteFiltreSemaine);
    }//GEN-LAST:event_venteFiltreSemaineMouseEntered

    private void venteFiltreSemaineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMouseExited
        FilterMouseExited(venteFiltreSemaine);
    }//GEN-LAST:event_venteFiltreSemaineMouseExited

    private void venteFiltreSemaineMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -7);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreSemaine);

    }//GEN-LAST:event_venteFiltreSemaineMousePressed

    private void venteFiltreMoisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMouseEntered
        FilterMouseEntered(venteFiltreMois);
    }//GEN-LAST:event_venteFiltreMoisMouseEntered

    private void venteFiltreMoisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMouseExited
        FilterMouseExited(venteFiltreMois);
    }//GEN-LAST:event_venteFiltreMoisMouseExited

    private void venteFiltreMoisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -30);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreMois);

    }//GEN-LAST:event_venteFiltreMoisMousePressed

    private void venteFiltrePeriodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMouseEntered
        FilterMouseEntered(venteFiltrePeriode);
    }//GEN-LAST:event_venteFiltrePeriodeMouseEntered

    private void venteFiltrePeriodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMouseExited
        FilterMouseExited(venteFiltrePeriode);
    }//GEN-LAST:event_venteFiltrePeriodeMouseExited

    private void venteFiltrePeriodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMousePressed
        FilterSelected(venteFiltrePeriode);
        PeriodChooserDialog periodChooserDialog = new PeriodChooserDialog();
        periodChooserDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        periodChooserDialog.setLocationRelativeTo(this);

        String [] answer = periodChooserDialog.getAnswer();
        String DateDeb = answer[0];
        String DateFin = answer[1];
        System.out.println(DateDeb+"    " + DateFin);

    }//GEN-LAST:event_venteFiltrePeriodeMousePressed
    private void showVentesCharte(String debutDate, String finDate) {
        String query = "select A.Categorie, SUM(quantite) from article A,detail_commande DC,Commande C where A.idArticle = DC.idArticle and DC.idCommande = C.idCommande and C.date >=\"" + debutDate + "\" and C.date<=\"" + finDate + "\" group by categorie;";
        try {
            JDBCPieDataset dataset = new JDBCPieDataset(dbStat.getConnexion(), query);
            JFreeChart chart = ChartFactory.createPieChart3D("Ventes Par Catégorie", dataset, true, true, true);
            chart.getTitle().setPaint(CustomColors.lightViolet);
            PiePlot3D P = (PiePlot3D) chart.getPlot();
            //  P.setSimpleLabels(true);
            PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
                    "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
            P.setLabelGenerator(gen);
            P.setBackgroundPaint(Color.white);
            P.setDrawingSupplier(new ChartDrawingSupplier());

            ChartPanel cp = new ChartPanel(chart);
            cp.addChartMouseListener(new ChartMouseListenerForPieSections());
            panelChart.updateUI();
            cp.setPreferredSize(panelChart.getPreferredSize());
            //Adding the chart to the panel to be viewed
            panelChart.removeAll();
            Component c = panelChart.add(cp);
            panelChart.setLayout(new GridLayout(0, 1));
            // panelChart.updateUI();

        } catch (SQLException ex) {
            System.out.println("Erreur dans la requete JDBCCategoryDataset PieChart " + ex.getMessage());
        }
    }

    private void shosRevenusCharteParJour() {
        String query = "select A.Categorie, SUM(quantite) from article A,detail_commande DC where A.idArticle = DC.idArticle group by categorie;";
        try {
            TimeSeries serieRevenus = new TimeSeries("Revenus");
            ResultSet Rs = dbStat.RevenusDerniereSemaine();
            while (Rs.next()) {
                Date time = Rs.getDate("Date");
                int value = Rs.getInt("MntTotal");
                serieRevenus.add(new Day(time), value);
            }
            TimeSeriesCollection dataset = new TimeSeriesCollection(serieRevenus);

            JFreeChart chart = ChartFactory.createTimeSeriesChart("Revenus Total Par Jour", "Date", "Revenu", dataset);
            XYPlot plot = chart.getXYPlot();
            plot.setDomainPannable(true);

            XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
            renderer.setSeriesPaint(0, Color.RED);
            renderer.setSeriesStroke(0, new BasicStroke(4.0f));
            plot.setBackgroundPaint(Color.white);
            plot.setRangeGridlinesVisible(true);
            plot.setRangeGridlinePaint(Color.BLACK);

            plot.setDomainGridlinesVisible(true);
            plot.setDomainGridlinePaint(Color.BLACK);
            plot.setRenderer(renderer);
            DateAxis dateAxis = (DateAxis) chart.getXYPlot().getDomainAxis();
            Calendar cal = Calendar.getInstance();
            cal.setTime(new java.util.Date());
            dateAxis.setMaximumDate(cal.getTime());

            cal.set(Calendar.DAY_OF_MONTH, cal.get(Calendar.DAY_OF_MONTH) - 7);
            dateAxis.setMinimumDate(cal.getTime());

            chart.getTitle().setPaint(CustomColors.lightViolet);
            //  P.setSimpleLabels(true);
            ChartPanel cp = new ChartPanel(chart);
            cp.setRangeZoomable(false);
            /* cp.setDomainZoomable(false);*/
            cp.setMouseWheelEnabled(true);
            cp.setPreferredSize(panelChart.getPreferredSize());
            //Adding the chart to the panel to be viewed
            panelChart.removeAll();
            Component c = panelChart.add(cp);
            panelChart.setLayout(new GridLayout(0, 1));
            // panelChart.updateUI();

        } catch (SQLException ex) {
            System.out.println("Erreur dans la requete JDBCCategoryDataset PieChart " + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartChoice;
    private javax.swing.JPanel FiltreVentes;
    private javax.swing.JPanel Filtres;
    private javax.swing.JLabel HeuresLabel;
    private javax.swing.JPanel HeuresPanel;
    private javax.swing.JLabel RevenusLabel;
    private javax.swing.JPanel RevenusPanel;
    private javax.swing.JLabel VentesLabel;
    private javax.swing.JLabel VentesLabel1;
    private javax.swing.JLabel VentesLabel2;
    private javax.swing.JLabel VentesLabel3;
    private javax.swing.JLabel VentesLabel4;
    private javax.swing.JLabel VentesLabel5;
    private javax.swing.JPanel VentesPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel venteFiltreAujourdhui;
    private javax.swing.JPanel venteFiltreMois;
    private javax.swing.JPanel venteFiltrePeriode;
    private javax.swing.JPanel venteFiltreSemaine;
    private javax.swing.JPanel venteFiltreTout;
    // End of variables declaration//GEN-END:variables
}
