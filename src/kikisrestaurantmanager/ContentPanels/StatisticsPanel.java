package kikisrestaurantmanager.ContentPanels;

import MODEL.DB_Statistics;
import addons.ChartDrawingSupplier;
import addons.ChartMouseListenerForPieSections;
import addons.CustomColors;
import java.awt.BasicStroke;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import kikisrestaurantmanager.ContentPanels.Charts.PieChart;
import kikisrestaurantmanager.ContentPanels.Charts.RevenusChart;
import kikisrestaurantmanager.Dialogs.ConfirmSuppressionDialog;
import kikisrestaurantmanager.HomeFrame;
import kikisrestaurantmanager.Dialogs.ChoosePeriodDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.entity.ChartEntity;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Day;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ilyas El Bani
 */
public class StatisticsPanel extends javax.swing.JPanel {

    private DB_Statistics dbStat = new DB_Statistics();
    HomeFrame mainMenu;
    SimpleDateFormat formatDate = new SimpleDateFormat("yyyy-MM-dd");
    CardLayout c;

    /**
     * Creates new form StatsPanel
     */
    public StatisticsPanel() {
        initComponents();
        //    VentesPanelMouseClicked(null);

    }

    public StatisticsPanel(HomeFrame mn) {
        initComponents();
        c = (CardLayout) Filtres.getLayout();

        mainMenu = mn;
        ChartChoiceSelected(VentesPanel);
        //        showVentesCharte();
        venteFiltreToutMousePressed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ChartChoice = new javax.swing.JPanel();
        VentesPanel = new javax.swing.JPanel();
        VentesLabel = new javax.swing.JLabel();
        RevenusPanel = new javax.swing.JPanel();
        RevenusLabel = new javax.swing.JLabel();
        HeuresPanel = new javax.swing.JPanel();
        HeuresLabel = new javax.swing.JLabel();
        panelChart = new javax.swing.JPanel();
        Filtres = new javax.swing.JPanel();
        FiltreVentes = new javax.swing.JPanel();
        venteFiltreTout = new javax.swing.JPanel();
        VentesLabel5 = new javax.swing.JLabel();
        venteFiltreAujourdhui = new javax.swing.JPanel();
        VentesLabel1 = new javax.swing.JLabel();
        venteFiltreSemaine = new javax.swing.JPanel();
        VentesLabel2 = new javax.swing.JLabel();
        venteFiltreMois = new javax.swing.JPanel();
        VentesLabel3 = new javax.swing.JLabel();
        venteFiltrePeriode = new javax.swing.JPanel();
        VentesLabel4 = new javax.swing.JLabel();
        FiltreHeuresActcives = new javax.swing.JPanel();
        HeureActiveFiltreTout = new javax.swing.JPanel();
        VentesLabel9 = new javax.swing.JLabel();
        HeureActiveFiltreAujourdhui = new javax.swing.JPanel();
        VentesLabel10 = new javax.swing.JLabel();
        HeureActiveFiltreSemaine = new javax.swing.JPanel();
        VentesLabel11 = new javax.swing.JLabel();
        HeureActiveFiltreMois = new javax.swing.JPanel();
        VentesLabel12 = new javax.swing.JLabel();
        HeureActiveFiltrePeriode = new javax.swing.JPanel();
        VentesLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        FiltreRevenus = new javax.swing.JPanel();
        RevenusFiltreParJour = new javax.swing.JPanel();
        VentesLabel6 = new javax.swing.JLabel();
        RevenusFiltreParSemaine = new javax.swing.JPanel();
        VentesLabel8 = new javax.swing.JLabel();
        RevenusFiltreParMois = new javax.swing.JPanel();
        VentesLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        ChartChoice.setBackground(new java.awt.Color(255, 255, 255));
        ChartChoice.setLayout(new java.awt.GridLayout(1, 0, 20, 0));

        VentesPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        VentesPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        VentesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VentesPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VentesPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VentesPanelMouseExited(evt);
            }
        });
        VentesPanel.setLayout(new java.awt.BorderLayout());

        VentesLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel.setText("% des Ventes");
        VentesPanel.add(VentesLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(VentesPanel);

        RevenusPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        RevenusPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RevenusPanelMouseExited(evt);
            }
        });
        RevenusPanel.setLayout(new java.awt.BorderLayout());

        RevenusLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        RevenusLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        RevenusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RevenusLabel.setText("Revenus");
        RevenusPanel.add(RevenusLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(RevenusPanel);

        HeuresPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeuresPanel.setPreferredSize(new java.awt.Dimension(140, 55));
        HeuresPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeuresPanelMouseExited(evt);
            }
        });
        HeuresPanel.setLayout(new java.awt.BorderLayout());

        HeuresLabel.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        HeuresLabel.setForeground(CustomColors.ordersFilterTextUnselected);
        HeuresLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeuresLabel.setText("Heures Actives");
        HeuresPanel.add(HeuresLabel, java.awt.BorderLayout.CENTER);

        ChartChoice.add(HeuresPanel);

        panelChart.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 453, Short.MAX_VALUE)
        );

        Filtres.setLayout(new java.awt.CardLayout());

        FiltreVentes.setBackground(new java.awt.Color(255, 255, 255));
        FiltreVentes.setLayout(new java.awt.GridLayout(1, 0, 15, 0));

        venteFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreTout.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreTout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreToutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreToutMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreToutMousePressed(evt);
            }
        });
        venteFiltreTout.setLayout(new java.awt.BorderLayout());

        VentesLabel5.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        VentesLabel5.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel5.setText("Tout");
        venteFiltreTout.add(VentesLabel5, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreTout);

        venteFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreAujourdhui.setPreferredSize(new java.awt.Dimension(100, 30));
        venteFiltreAujourdhui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreAujourdhuiMousePressed(evt);
            }
        });
        venteFiltreAujourdhui.setLayout(new java.awt.BorderLayout());

        VentesLabel1.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        VentesLabel1.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel1.setText("Aujourd'hui");
        venteFiltreAujourdhui.add(VentesLabel1, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreAujourdhui);

        venteFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreSemaine.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreSemaine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreSemaineMousePressed(evt);
            }
        });
        venteFiltreSemaine.setLayout(new java.awt.BorderLayout());

        VentesLabel2.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        VentesLabel2.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel2.setText("Derniere Semaine");
        venteFiltreSemaine.add(VentesLabel2, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreSemaine);

        venteFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreMois.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltreMois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltreMoisMousePressed(evt);
            }
        });
        venteFiltreMois.setLayout(new java.awt.BorderLayout());

        VentesLabel3.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        VentesLabel3.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel3.setText("Dernier Mois");
        venteFiltreMois.add(VentesLabel3, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltreMois);

        venteFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltrePeriode.setPreferredSize(new java.awt.Dimension(140, 30));
        venteFiltrePeriode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                venteFiltrePeriodeMousePressed(evt);
            }
        });
        venteFiltrePeriode.setLayout(new java.awt.BorderLayout());

        VentesLabel4.setFont(new java.awt.Font("Montserrat", 0, 17)); // NOI18N
        VentesLabel4.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel4.setText("Periode");
        venteFiltrePeriode.add(VentesLabel4, java.awt.BorderLayout.CENTER);

        FiltreVentes.add(venteFiltrePeriode);

        Filtres.add(FiltreVentes, "VentesCard");

        FiltreHeuresActcives.setBackground(new java.awt.Color(255, 255, 255));
        FiltreHeuresActcives.setLayout(new java.awt.GridLayout(1, 0, 15, 0));

        HeureActiveFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreTout.setPreferredSize(new java.awt.Dimension(140, 30));
        HeureActiveFiltreTout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreToutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreToutMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreToutMousePressed(evt);
            }
        });
        HeureActiveFiltreTout.setLayout(new java.awt.BorderLayout());

        VentesLabel9.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel9.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel9.setText("Tout");
        HeureActiveFiltreTout.add(VentesLabel9, java.awt.BorderLayout.CENTER);

        FiltreHeuresActcives.add(HeureActiveFiltreTout);

        HeureActiveFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreAujourdhui.setPreferredSize(new java.awt.Dimension(100, 30));
        HeureActiveFiltreAujourdhui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreAujourdhuiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreAujourdhuiMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreAujourdhuiMousePressed(evt);
            }
        });
        HeureActiveFiltreAujourdhui.setLayout(new java.awt.BorderLayout());

        VentesLabel10.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel10.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel10.setText("Aujourd'hui");
        HeureActiveFiltreAujourdhui.add(VentesLabel10, java.awt.BorderLayout.CENTER);

        FiltreHeuresActcives.add(HeureActiveFiltreAujourdhui);

        HeureActiveFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreSemaine.setPreferredSize(new java.awt.Dimension(140, 30));
        HeureActiveFiltreSemaine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreSemaineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreSemaineMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreSemaineMousePressed(evt);
            }
        });
        HeureActiveFiltreSemaine.setLayout(new java.awt.BorderLayout());

        VentesLabel11.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel11.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel11.setText("Derniere Semaine");
        HeureActiveFiltreSemaine.add(VentesLabel11, java.awt.BorderLayout.CENTER);

        FiltreHeuresActcives.add(HeureActiveFiltreSemaine);

        HeureActiveFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreMois.setPreferredSize(new java.awt.Dimension(140, 30));
        HeureActiveFiltreMois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreMoisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreMoisMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeureActiveFiltreMoisMousePressed(evt);
            }
        });
        HeureActiveFiltreMois.setLayout(new java.awt.BorderLayout());

        VentesLabel12.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel12.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel12.setText("Dernier Mois");
        HeureActiveFiltreMois.add(VentesLabel12, java.awt.BorderLayout.CENTER);

        FiltreHeuresActcives.add(HeureActiveFiltreMois);

        HeureActiveFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltrePeriode.setPreferredSize(new java.awt.Dimension(140, 30));
        HeureActiveFiltrePeriode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HeureActiveFiltrePeriodeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HeureActiveFiltrePeriodeMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HeureActiveFiltrePeriodeMousePressed(evt);
            }
        });
        HeureActiveFiltrePeriode.setLayout(new java.awt.BorderLayout());

        VentesLabel13.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel13.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel13.setText("Periode");
        HeureActiveFiltrePeriode.add(VentesLabel13, java.awt.BorderLayout.CENTER);

        FiltreHeuresActcives.add(HeureActiveFiltrePeriode);

        Filtres.add(FiltreHeuresActcives, "HeuresActives");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        FiltreRevenus.setBackground(new java.awt.Color(255, 255, 255));
        FiltreRevenus.setLayout(new java.awt.GridLayout(1, 0, 120, 0));

        RevenusFiltreParJour.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParJour.setPreferredSize(new java.awt.Dimension(140, 30));
        RevenusFiltreParJour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RevenusFiltreParJourMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RevenusFiltreParJourMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RevenusFiltreParJourMousePressed(evt);
            }
        });
        RevenusFiltreParJour.setLayout(new java.awt.BorderLayout());

        VentesLabel6.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel6.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel6.setText("Par Jour");
        RevenusFiltreParJour.add(VentesLabel6, java.awt.BorderLayout.CENTER);

        FiltreRevenus.add(RevenusFiltreParJour);

        RevenusFiltreParSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParSemaine.setPreferredSize(new java.awt.Dimension(140, 30));
        RevenusFiltreParSemaine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RevenusFiltreParSemaineMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RevenusFiltreParSemaineMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RevenusFiltreParSemaineMousePressed(evt);
            }
        });
        RevenusFiltreParSemaine.setLayout(new java.awt.BorderLayout());

        VentesLabel8.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel8.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel8.setText("Par Semaine");
        RevenusFiltreParSemaine.add(VentesLabel8, java.awt.BorderLayout.CENTER);

        FiltreRevenus.add(RevenusFiltreParSemaine);

        RevenusFiltreParMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParMois.setPreferredSize(new java.awt.Dimension(140, 30));
        RevenusFiltreParMois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RevenusFiltreParMoisMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RevenusFiltreParMoisMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RevenusFiltreParMoisMousePressed(evt);
            }
        });
        RevenusFiltreParMois.setLayout(new java.awt.BorderLayout());

        VentesLabel7.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        VentesLabel7.setForeground(CustomColors.ordersFilterTextUnselected);
        VentesLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VentesLabel7.setText("Par Mois");
        RevenusFiltreParMois.add(VentesLabel7, java.awt.BorderLayout.CENTER);

        FiltreRevenus.add(RevenusFiltreParMois);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(FiltreRevenus, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FiltreRevenus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        Filtres.add(jPanel2, "RevenusCard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Filtres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ChartChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(78, 78, 78))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ChartChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(Filtres, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1165, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 736, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void ChartChoiceDefaultColorAll() {
        RevenusPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        VentesPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeuresPanel.setBackground(CustomColors.panelDefaultBackgroundColor);
    }

    private void FilterMouseEntered(JPanel p) {
        if (p.getBackground() != CustomColors.orderFilterPanelSelected) {
            p.setBackground(CustomColors.orderFilterPanelHoveredOn);
        }
    }

    private void FilterMouseExited(JPanel p) {
        if (p.getBackground() != CustomColors.orderFilterPanelSelected) {
            p.setBackground(CustomColors.panelDefaultBackgroundColor);
        }
    }

    private void ChartChoiceSelected(JPanel p) {
        ChartChoiceDefaultColorAll();
        p.setBackground(CustomColors.orderFilterPanelSelected);
    }

    private void FilterChoiceDefaultColorAll() {
        venteFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        venteFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParJour.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        RevenusFiltreParSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreAujourdhui.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreMois.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltrePeriode.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreSemaine.setBackground(CustomColors.panelDefaultBackgroundColor);
        HeureActiveFiltreTout.setBackground(CustomColors.panelDefaultBackgroundColor);
    }

    private void FilterSelected(JPanel p) {
        FilterChoiceDefaultColorAll();
        p.setBackground(CustomColors.orderFilterPanelSelected);
    }

    private void VentesPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseClicked

        ChartChoiceSelected(VentesPanel);
        venteFiltreToutMousePressed(null);
        c.show(Filtres, "VentesCard");

        // showVentesCharte();
    }//GEN-LAST:event_VentesPanelMouseClicked

    private void VentesPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseEntered
        FilterMouseEntered(VentesPanel);
    }//GEN-LAST:event_VentesPanelMouseEntered

    private void VentesPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VentesPanelMouseExited
        FilterMouseExited(RevenusPanel);
    }//GEN-LAST:event_VentesPanelMouseExited

    private void RevenusPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseClicked
        ChartChoiceSelected(RevenusPanel);
        RevenusFiltreParJourMousePressed(null);
        c.show(Filtres, "RevenusCard");
        System.out.println("FiltreRevenus");
    }//GEN-LAST:event_RevenusPanelMouseClicked

    private void RevenusPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseEntered
        FilterMouseEntered(RevenusPanel);
    }//GEN-LAST:event_RevenusPanelMouseEntered

    private void RevenusPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusPanelMouseExited

        FilterMouseExited(RevenusPanel);
    }//GEN-LAST:event_RevenusPanelMouseExited

    private void HeuresPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseClicked
        ChartChoiceSelected(HeuresPanel);
        HeureActiveFiltreToutMousePressed(null);
        c.show(Filtres, "HeuresActives");
    }//GEN-LAST:event_HeuresPanelMouseClicked

    private void HeuresPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseEntered
        FilterMouseEntered(HeuresPanel);
    }//GEN-LAST:event_HeuresPanelMouseEntered

    private void HeuresPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeuresPanelMouseExited
        FilterMouseExited(HeuresPanel);
    }//GEN-LAST:event_HeuresPanelMouseExited

    private void venteFiltreAujourdhuiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMouseEntered
        FilterMouseEntered(venteFiltreAujourdhui);
    }//GEN-LAST:event_venteFiltreAujourdhuiMouseEntered

    private void venteFiltreAujourdhuiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMouseExited
        FilterMouseExited(venteFiltreAujourdhui);
    }//GEN-LAST:event_venteFiltreAujourdhuiMouseExited

    private void venteFiltreToutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.YEAR, -100);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMousePressed

    private void venteFiltreToutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMouseEntered
        FilterMouseEntered(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMouseEntered

    private void venteFiltreToutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreToutMouseExited
        FilterMouseExited(venteFiltreTout);
    }//GEN-LAST:event_venteFiltreToutMouseExited

    private void venteFiltreAujourdhuiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreAujourdhuiMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -1);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreAujourdhui);

    }//GEN-LAST:event_venteFiltreAujourdhuiMousePressed

    private void venteFiltreSemaineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMouseEntered
        FilterMouseEntered(venteFiltreSemaine);
    }//GEN-LAST:event_venteFiltreSemaineMouseEntered

    private void venteFiltreSemaineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMouseExited
        FilterMouseExited(venteFiltreSemaine);
    }//GEN-LAST:event_venteFiltreSemaineMouseExited

    private void venteFiltreSemaineMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreSemaineMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -7);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreSemaine);
    }//GEN-LAST:event_venteFiltreSemaineMousePressed

    private void venteFiltreMoisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMouseEntered
        FilterMouseEntered(venteFiltreMois);
    }//GEN-LAST:event_venteFiltreMoisMouseEntered

    private void venteFiltreMoisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMouseExited
        FilterMouseExited(venteFiltreMois);
    }//GEN-LAST:event_venteFiltreMoisMouseExited

    private void venteFiltreMoisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltreMoisMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -30);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showVentesCharte(dateDebut, dateFin);
        FilterSelected(venteFiltreMois);

    }//GEN-LAST:event_venteFiltreMoisMousePressed

    private void venteFiltrePeriodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMouseEntered
        FilterMouseEntered(venteFiltrePeriode);
    }//GEN-LAST:event_venteFiltrePeriodeMouseEntered

    private void venteFiltrePeriodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMouseExited
        FilterMouseExited(venteFiltrePeriode);
    }//GEN-LAST:event_venteFiltrePeriodeMouseExited

    private void venteFiltrePeriodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_venteFiltrePeriodeMousePressed
        FilterSelected(venteFiltrePeriode);
        ChoosePeriodDialog periodChooserDialog = new ChoosePeriodDialog();
        periodChooserDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        periodChooserDialog.setLocationRelativeTo(this);

        String[] answer = periodChooserDialog.getAnswer();
        SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yy");
        SimpleDateFormat format2 = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date datedeb = null;
        java.util.Date datefin = null;

        try {
            datedeb = format1.parse(answer[0]);
            datefin = format1.parse(answer[1]);
        } catch (ParseException ex) {
        }
        String DateDeb = format2.format(datedeb);
        String DateFin = format2.format(datefin);

        showVentesCharte(DateDeb, DateFin);

    }//GEN-LAST:event_venteFiltrePeriodeMousePressed

    private void RevenusFiltreParJourMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParJourMouseEntered
        FilterMouseEntered(RevenusFiltreParJour);
    }//GEN-LAST:event_RevenusFiltreParJourMouseEntered

    private void RevenusFiltreParJourMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParJourMouseExited
        FilterMouseExited(RevenusFiltreParJour);
    }//GEN-LAST:event_RevenusFiltreParJourMouseExited

    private void RevenusFiltreParJourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParJourMousePressed
        showRevenusCharteParJour();
        FilterSelected(RevenusFiltreParJour);    }//GEN-LAST:event_RevenusFiltreParJourMousePressed

    private void RevenusFiltreParMoisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParMoisMouseEntered
        FilterMouseEntered(RevenusFiltreParMois);
    }//GEN-LAST:event_RevenusFiltreParMoisMouseEntered

    private void RevenusFiltreParMoisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParMoisMouseExited
        FilterMouseExited(RevenusFiltreParMois);
    }//GEN-LAST:event_RevenusFiltreParMoisMouseExited

    private void RevenusFiltreParMoisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParMoisMousePressed
        showRevenusCharteParMois();
        FilterSelected(RevenusFiltreParMois);
    }//GEN-LAST:event_RevenusFiltreParMoisMousePressed

    private void RevenusFiltreParSemaineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParSemaineMouseEntered
        FilterMouseEntered(RevenusFiltreParSemaine);
    }//GEN-LAST:event_RevenusFiltreParSemaineMouseEntered

    private void RevenusFiltreParSemaineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParSemaineMouseExited
        FilterMouseExited(RevenusFiltreParSemaine);
    }//GEN-LAST:event_RevenusFiltreParSemaineMouseExited

    private void RevenusFiltreParSemaineMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RevenusFiltreParSemaineMousePressed
        showRevenusCharteParSemaine();
        FilterSelected(RevenusFiltreParSemaine);

    }//GEN-LAST:event_RevenusFiltreParSemaineMousePressed

    private void HeureActiveFiltreToutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreToutMouseEntered
        FilterMouseEntered(HeureActiveFiltreTout);
    }//GEN-LAST:event_HeureActiveFiltreToutMouseEntered

    private void HeureActiveFiltreToutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreToutMouseExited
        FilterMouseExited(HeureActiveFiltreTout);
    }//GEN-LAST:event_HeureActiveFiltreToutMouseExited

    private void HeureActiveFiltreToutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreToutMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.YEAR, -100);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showHeuresActivesCharte(dateDebut, dateFin);
        FilterSelected(HeureActiveFiltreTout);
    }//GEN-LAST:event_HeureActiveFiltreToutMousePressed

    private void HeureActiveFiltreAujourdhuiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreAujourdhuiMouseEntered
        FilterMouseEntered(HeureActiveFiltreAujourdhui);

    }//GEN-LAST:event_HeureActiveFiltreAujourdhuiMouseEntered

    private void HeureActiveFiltreAujourdhuiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreAujourdhuiMouseExited
        FilterMouseExited(HeureActiveFiltreAujourdhui);
    }//GEN-LAST:event_HeureActiveFiltreAujourdhuiMouseExited

    private void HeureActiveFiltreAujourdhuiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreAujourdhuiMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -1);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showHeuresActivesCharte(dateDebut, dateFin);
        FilterSelected(HeureActiveFiltreAujourdhui);
    }//GEN-LAST:event_HeureActiveFiltreAujourdhuiMousePressed

    private void HeureActiveFiltreSemaineMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreSemaineMouseEntered
        FilterMouseEntered(HeureActiveFiltreSemaine);
    }//GEN-LAST:event_HeureActiveFiltreSemaineMouseEntered

    private void HeureActiveFiltreSemaineMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreSemaineMouseExited
        FilterMouseExited(HeureActiveFiltreSemaine);
    }//GEN-LAST:event_HeureActiveFiltreSemaineMouseExited

    private void HeureActiveFiltreSemaineMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreSemaineMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -7);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showHeuresActivesCharte(dateDebut, dateFin);
        FilterSelected(HeureActiveFiltreSemaine);
    }//GEN-LAST:event_HeureActiveFiltreSemaineMousePressed

    private void HeureActiveFiltreMoisMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreMoisMouseEntered
        FilterMouseEntered(HeureActiveFiltreMois);
    }//GEN-LAST:event_HeureActiveFiltreMoisMouseEntered

    private void HeureActiveFiltreMoisMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreMoisMouseExited
        FilterMouseExited(HeureActiveFiltreMois);
    }//GEN-LAST:event_HeureActiveFiltreMoisMouseExited

    private void HeureActiveFiltreMoisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltreMoisMousePressed
        Calendar cal = Calendar.getInstance();
        cal.setTime(new java.util.Date());
        cal.add(Calendar.DATE, 1);
        String dateFin = formatDate.format(cal.getTime());
        cal.add(Calendar.DATE, -30);
        String dateDebut = formatDate.format(cal.getTime());
        System.out.println(dateDebut + "    " + dateFin);
        showHeuresActivesCharte(dateDebut, dateFin);
        FilterSelected(HeureActiveFiltreMois);
    }//GEN-LAST:event_HeureActiveFiltreMoisMousePressed

    private void HeureActiveFiltrePeriodeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltrePeriodeMouseEntered
        FilterMouseEntered(HeureActiveFiltrePeriode);
    }//GEN-LAST:event_HeureActiveFiltrePeriodeMouseEntered

    private void HeureActiveFiltrePeriodeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltrePeriodeMouseExited
        FilterMouseExited(HeureActiveFiltrePeriode);
    }//GEN-LAST:event_HeureActiveFiltrePeriodeMouseExited

    private void HeureActiveFiltrePeriodeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeureActiveFiltrePeriodeMousePressed
        ChoosePeriodDialog periodChooserDialog = new ChoosePeriodDialog();
        periodChooserDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        periodChooserDialog.setLocationRelativeTo(this);

        String[] answer = periodChooserDialog.getAnswer();
        SimpleDateFormat format1 = new SimpleDateFormat("dd/MM/yy");
        SimpleDateFormat format2 = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date datedeb = null;
        java.util.Date datefin = null;

        try {
            datedeb = format1.parse(answer[0]);
            datefin = format1.parse(answer[1]);
        } catch (ParseException ex) {
        }
        String DateDeb = format2.format(datedeb);
        String DateFin = format2.format(datefin);

        showHeuresActivesCharte(DateDeb, DateFin);
        FilterSelected(HeureActiveFiltrePeriode);

    }//GEN-LAST:event_HeureActiveFiltrePeriodeMousePressed
    private void showVentesCharte(String debutDate, String finDate) {
        PieChart pieChart = new PieChart(debutDate,finDate);
        ChartPanel cp = pieChart.getChartPanel();
        cp.addChartMouseListener(new ChartMouseListenerForPieSections(debutDate, finDate));
        panelChart.updateUI();
        cp.setPreferredSize(panelChart.getPreferredSize());
        //Adding the chart to the panel to be viewed
        panelChart.removeAll();
        panelChart.add(cp);
        panelChart.setLayout(new GridLayout(0, 1));
        // panelChart.updateUI();

    }

    private void showRevenusCharteParJour() {
        RevenusChart revenusChart = new RevenusChart("ParJour");
        panelChart.updateUI();
        revenusChart.getChartPanel().setPreferredSize(panelChart.getPreferredSize());
        //Adding the chart to the panel to be viewed
        panelChart.removeAll();
        panelChart.add(revenusChart.getChartPanel());
        panelChart.setLayout(new GridLayout(0, 1));
        // panelChart.updateUI();

    }

    private void showRevenusCharteParMois() {
        RevenusChart revenusChart = new RevenusChart("ParMois");
        panelChart.updateUI();
        revenusChart.getChartPanel().setPreferredSize(panelChart.getPreferredSize());
        //Adding the chart to the panel to be viewed
        panelChart.removeAll();
        panelChart.add(revenusChart.getChartPanel());
        panelChart.setLayout(new GridLayout(0, 1));
        // panelChart.updateUI();

    }

    private void showRevenusCharteParSemaine() {
        RevenusChart revenusChart = new RevenusChart("ParSemaine");
        panelChart.updateUI();
        revenusChart.getChartPanel().setPreferredSize(panelChart.getPreferredSize());
        //Adding the chart to the panel to be viewed
        panelChart.removeAll();
        panelChart.add(revenusChart.getChartPanel());
        panelChart.setLayout(new GridLayout(0, 1));
        // panelChart.updateUI();
    }

    private void showHeuresActivesCharte(String debutDate, String finDate) {
        try {
            ResultSet Rs = dbStat.HeuresActivesDebFin(debutDate, finDate);
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            for (int i = 6; i <= 24; ++i) {
                String date = String.format("%02d", i);
                dataset.addValue(0, "NbCommande", date);
            }

            while (Rs.next()) {
                String time = Rs.getString("Hour");
                int value = Rs.getInt("nb");
                dataset.addValue(value, "NbCommande", time);
            }

            JFreeChart chart = ChartFactory.createBarChart("Heures Actives Tout", "Date", "Nombre Commandes", dataset);
            CategoryPlot plot = chart.getCategoryPlot();
            plot.getRangeAxis().setStandardTickUnits(NumberAxis.createIntegerTickUnits());
            //FORMAT PlotArea
            plot.setBackgroundPaint(Color.white);
            plot.setDomainGridlinePaint(Color.white);
            plot.setRangeGridlinePaint(Color.white);
            plot.setOutlineVisible(false);

            //Format Bars
            //            plot.setDomainPannable(true);
            //
            //            XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
            //            renderer.setSeriesPaint(0, Color.RED);
            //            renderer.setSeriesStroke(0, new BasicStroke(4.0f));
            plot.setBackgroundPaint(Color.white);
            plot.setRangeGridlinesVisible(true);
            plot.setRangeGridlinePaint(Color.BLACK);
//
            //   plot.setDomainGridlinesVisible(true);
            plot.setDomainGridlinePaint(Color.BLACK);
//            plot.setRenderer(renderer);
//            DateAxis dateAxis = (DateAxis) chart.getXYPlot().getDomainAxis();
//            Calendar cal = Calendar.getInstance();
//            cal.setTime(new java.util.Date());
//            dateAxis.setMaximumDate(cal.getTime());
//
//            cal.set(Calendar.DAY_OF_MONTH, cal.get(Calendar.DAY_OF_MONTH) - 7);
//            dateAxis.setMinimumDate(cal.getTime());
//
//            chart.getTitle().setPaint(CustomColors.lightViolet);
//            //  P.setSimpleLabels(true);
            ChartPanel cp = new ChartPanel(chart);
            cp.setRangeZoomable(false);
            /* cp.setDomainZoomable(false);*/
            cp.setMouseWheelEnabled(true);
            cp.setPreferredSize(panelChart.getPreferredSize());
            //Adding the chart to the panel to be viewed
            panelChart.removeAll();
            Component c = panelChart.add(cp);
            panelChart.setLayout(new GridLayout(0, 1));
            // panelChart.updateUI();

        } catch (SQLException ex) {
            System.out.println("Erreur dans la requete JDBCCategoryDataset PieChart " + ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartChoice;
    private javax.swing.JPanel FiltreHeuresActcives;
    private javax.swing.JPanel FiltreRevenus;
    private javax.swing.JPanel FiltreVentes;
    private javax.swing.JPanel Filtres;
    private javax.swing.JPanel HeureActiveFiltreAujourdhui;
    private javax.swing.JPanel HeureActiveFiltreMois;
    private javax.swing.JPanel HeureActiveFiltrePeriode;
    private javax.swing.JPanel HeureActiveFiltreSemaine;
    private javax.swing.JPanel HeureActiveFiltreTout;
    private javax.swing.JLabel HeuresLabel;
    private javax.swing.JPanel HeuresPanel;
    private javax.swing.JPanel RevenusFiltreParJour;
    private javax.swing.JPanel RevenusFiltreParMois;
    private javax.swing.JPanel RevenusFiltreParSemaine;
    private javax.swing.JLabel RevenusLabel;
    private javax.swing.JPanel RevenusPanel;
    private javax.swing.JLabel VentesLabel;
    private javax.swing.JLabel VentesLabel1;
    private javax.swing.JLabel VentesLabel10;
    private javax.swing.JLabel VentesLabel11;
    private javax.swing.JLabel VentesLabel12;
    private javax.swing.JLabel VentesLabel13;
    private javax.swing.JLabel VentesLabel2;
    private javax.swing.JLabel VentesLabel3;
    private javax.swing.JLabel VentesLabel4;
    private javax.swing.JLabel VentesLabel5;
    private javax.swing.JLabel VentesLabel6;
    private javax.swing.JLabel VentesLabel7;
    private javax.swing.JLabel VentesLabel8;
    private javax.swing.JLabel VentesLabel9;
    private javax.swing.JPanel VentesPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelChart;
    private javax.swing.JPanel venteFiltreAujourdhui;
    private javax.swing.JPanel venteFiltreMois;
    private javax.swing.JPanel venteFiltrePeriode;
    private javax.swing.JPanel venteFiltreSemaine;
    private javax.swing.JPanel venteFiltreTout;
    // End of variables declaration//GEN-END:variables

}
